replicaCount: 1

image:
  repository: cloudflare/cloudflared
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

livenessProbe:
  httpGet:
    path: /ready
    port: 2000
  failureThreshold: 1
  initialDelaySeconds: 10
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /ready
    port: 2000
  failureThreshold: 1
  initialDelaySeconds: 10
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

metrics:
  enabled: false
  port: 2000
  annotations: {}
  additionalLabels: {}
  interval: 30s
  scrapeTimeout: ""

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

cloudflared:
  # Verbosity of logging
  logLevel: info
  gracePeriod: 30s
  tunnel:
    # Tunnel name or UUID
    identifier: ""
    # Manage autoupdates for the client
    no-autoupdate: true
    # List of tunnel ingress
    ingress:
      - service: http_status:404
